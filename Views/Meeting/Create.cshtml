@model GreTutor.Models.Entities.Meeting
@{
    ViewData["Title"] = "Create Meeting";
    Layout = "_Layout";
}

<!-- Page Banner Start -->
@await Html.PartialAsync("_PageBannerStart")
<!-- Page Banner End -->

<div class="container mt-4">
    <h2 class="mb-3">Create a meeting</h2>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @Html.Raw(TempData["Error"])
        </div>
    }

    <form asp-action="Create" asp-controller="Meeting" method="post" class="border p-4 shadow-sm bg-light rounded">
        <input asp-for="ClassId" type="hidden" />

        <div class="mb-3">
            <label for="Title" class="form-label">Title:</label>
            <input asp-for="Title" class="form-control" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="row">
            <div class="col-md-6">
                <label for="StartTime" class="form-label">Start time:</label>
                <input asp-for="StartTime" type="datetime-local" class="form-control" required step="60" /> @* Chỉ hiển thị phút, bỏ giây *@
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Meeting format:</label>
            <select id="meetingType" class="form-select" required>
                <option value="Online">Online</option>
                <option value="Offline">Offline</option>
            </select>
        </div>

        <div class="mb-3" id="locationField" style="display: none;">
            <label for="Location" class="form-label">Location:</label>
            <input asp-for="Location" id="Location" class="form-control" />
        </div>

        <input type="hidden" asp-for="MeetingLink" id="MeetingLink" />

        <div class="mb-3">
            <label for="Note" class="form-label">Note:</label>
            <textarea asp-for="Note" class="form-control" rows="3"></textarea>
        </div>

        <button type="submit" class="btn btn-success">
            Save meeting
        </button>
        <a href="@Url.Action("Index", "Meeting", new { classId = Model?.ClassId })" class="btn btn-secondary">
            Back to list
        </a>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const meetingType = document.getElementById("meetingType");
        const locationField = document.getElementById("locationField");
        const locationInput = document.getElementById("Location");
        const meetingLink = document.getElementById("MeetingLink");

        meetingType.addEventListener("change", function () {
            if (this.value === "Offline") {
                locationField.style.display = "block";
                locationInput.required = true;
                locationInput.value = ""; // người dùng điền địa điểm
                meetingLink.value = ""; // Không có link họp nếu Offline
            } else {
                locationField.style.display = "none";
                locationInput.required = false;
                locationInput.value = "Online"; // Gán giá trị "Online" nếu họp online
                meetingLink.value = ""; 
            }
        });

        // Gọi sự kiện change ngay khi load để đảm bảo form đúng trạng thái
        meetingType.dispatchEvent(new Event("change"));
    });
</script>
