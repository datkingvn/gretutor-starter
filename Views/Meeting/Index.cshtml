@model IEnumerable<GreTutor.Models.Entities.Meeting>

@{
    ViewData["Title"] = "Meeting List";
    Layout = "_Layout";
}

@await Html.PartialAsync("_PageBannerStart")

<div class="container mt-4">
    <h2 class="text-center mb-4">Meeting List</h2>

    <div class="table-responsive">
        <table class="table table-bordered table-striped text-center align-middle">
            <thead class="table-dark">
                <tr>
                    <th style="width: 20%;">Title</th>
                    <th style="width: 15%;">Time</th>
                    <th style="width: 20%;">Location</th>
                    <th style="width: 25%;">Note</th>
                    <th style="width: 10%;">Recording</th>
                    @if (User.IsInRole("Staff") || User.IsInRole("Tutor"))
                    {
                        <th style="width: 10%;">Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var meeting in Model)
                {
                    <tr>
                        <td><strong>@meeting.Title</strong></td>
                        <td>
                            <span class="badge bg-success">
                                @meeting.StartTime.ToString("dd/MM/yyyy HH:mm")
                            </span>
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(meeting.MeetingLink))
                            {
                                <a href="@meeting.MeetingLink" class="btn btn-success btn-sm" target="_blank">
                                    Join Online
                                </a>
                            }
                            else
                            {
                                <span class="badge bg-primary">@meeting.Location</span>
                            }
                        </td>
                        <td>@meeting.Note</td>
                        <td>
                            @if (meeting.Location == "Online" && !string.IsNullOrEmpty(meeting.RecordingLink))
                            {
                                <a href="@meeting.RecordingLink" class="btn btn-info btn-sm" target="_blank">
                                    View Records
                                </a>
                            }
                            else
                            {
                                <span class="text-muted">No records</span>
                            }
                        </td>
                        @if (User.IsInRole("Staff") || User.IsInRole("Tutor"))
                        {
                            <td>
                                <form asp-controller="Meeting" asp-action="Delete" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@meeting.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm"
                                        onclick="return confirm('Are you sure you want to delete?');">
                                        Delete
                                    </button>
                                </form>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between mt-3">
        <a href="@Url.Action("Index", "Classroom")" class="btn btn-success">Back to Classroom</a>
        @if (User.IsInRole("Staff") || User.IsInRole("Tutor"))
        {
            <a href="@Url.Action("Create", "Meeting", new { classId = ViewBag.ClassId })" class="btn btn-outline-primary">
                Create a Meeting
            </a>
        }
    </div>
</div>
